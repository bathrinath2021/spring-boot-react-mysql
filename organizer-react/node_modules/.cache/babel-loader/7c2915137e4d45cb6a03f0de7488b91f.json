{"ast":null,"code":"var _jsxFileName = \"B:\\\\Eventmanagement\\\\eventsite\\\\src\\\\Component\\\\Login.jsx\";\nimport React, { Component, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.database = [{\n      username: \"user1\",\n      password: \"pass1\"\n    }, {\n      username: \"user2\",\n      password: \"pass2\"\n    }];\n    this.errors = {\n      uname: \"invalid username\",\n      pass: \"invalid password\"\n    };\n\n    this.handleSubmit = event => {\n      //Prevent page reload\n      event.preventDefault();\n      var {\n        uname,\n        pass\n      } = document.forms[0]; // Find user login info\n\n      const userData = database.find(user => user.username === uname.value); // Compare user info\n\n      if (userData) {\n        if (userData.password !== pass.value) {\n          // Invalid password\n          setErrorMessages({\n            name: \"pass\",\n            message: errors.pass\n          });\n        } else {\n          setIsSubmitted(true);\n        }\n      } else {\n        // Username not found\n        setErrorMessages({\n          name: \"uname\",\n          message: errors.uname\n        });\n      }\n    };\n\n    this.renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: errorMessages.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n\n    this.renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"uname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), renderErrorMessage(\"uname\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"pass\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), renderErrorMessage(\"pass\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"User is successfully logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 32\n        }, this) : renderForm]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"names":["React","Component","useState","ReactDOM","Login","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","setErrorMessages","name","message","setIsSubmitted","renderErrorMessage","errorMessages","renderForm","render","isSubmitted"],"sources":["B:/Eventmanagement/eventsite/src/Component/Login.jsx"],"sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles.css\";\r\n\r\nclass Login extends Component {\r\n    // React States\r\n    // const [errorMessages, setErrorMessages]  = useState({});\r\n    // const [isSubmitted, setIsSubmitted] = useState(false);\r\n  \r\n    // User Login info\r\n    database = [\r\n      {\r\n        username: \"user1\",\r\n        password: \"pass1\"\r\n      },\r\n      {\r\n        username: \"user2\",\r\n        password: \"pass2\"\r\n      }\r\n    ];\r\n  \r\n    errors = {\r\n      uname: \"invalid username\",\r\n      pass: \"invalid password\"\r\n    };\r\n  \r\n    handleSubmit = (event) => {\r\n      //Prevent page reload\r\n      event.preventDefault();\r\n  \r\n      var { uname, pass } = document.forms[0];\r\n  \r\n      // Find user login info\r\n      const userData = database.find((user) => user.username === uname.value);\r\n      \r\n  \r\n      // Compare user info\r\n      if (userData) {\r\n        if (userData.password !== pass.value) {\r\n          // Invalid password\r\n          setErrorMessages({ name: \"pass\", message: errors.pass });\r\n        } else {\r\n          setIsSubmitted(true);\r\n        }\r\n      } else {\r\n        // Username not found\r\n        setErrorMessages({ name: \"uname\", message: errors.uname });\r\n      }\r\n    };\r\n  \r\n    // Generate JSX code for error message\r\n    renderErrorMessage = (name) =>\r\n      name === errorMessages.name && (\r\n        <div className=\"error\">{errorMessages.message}</div>\r\n      );\r\n  \r\n    // JSX code for login form\r\n    renderForm = (\r\n      <div className=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"input-container\">\r\n            <label>Username </label>\r\n            <input type=\"text\" name=\"uname\" required />\r\n            {renderErrorMessage(\"uname\")}\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label>Password </label>\r\n            <input type=\"password\" name=\"pass\" required />\r\n            {renderErrorMessage(\"pass\")}\r\n          </div>\r\n          <div className=\"button-container\">\r\n            <input type=\"submit\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  \r\n    render(){\r\n        return (\r\n            <div className=\"app\">\r\n              <div className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n              </div>\r\n            </div>\r\n          );\r\n    }\r\n\r\n  }\r\n\r\n  export default Login"],"mappings":"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"},"metadata":{},"sourceType":"module"}