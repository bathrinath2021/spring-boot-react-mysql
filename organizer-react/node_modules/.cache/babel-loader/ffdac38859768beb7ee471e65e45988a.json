{"ast":null,"code":"var _jsxFileName = \"B:\\\\Eventmanagement\\\\eventmanagement\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false); // Generate JSX code for error message\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this); // User Login info\n\n\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"user2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0]; // Find user login info\n\n    const userData = database.find(user => user.username === uname.value); // Compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User is successfully logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 18\n    }, this) : renderForm]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","App","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","renderErrorMessage","name","message","renderForm","handleSubmit","database","username","password","errors","uname","pass","event","preventDefault","document","forms","userData","find","user","value"],"sources":["B:/Eventmanagement/eventmanagement/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nfunction App(){ \n  const [errorMessages, setErrorMessages] = useState({});\nconst [isSubmitted, setIsSubmitted] = useState(false);\n\n// Generate JSX code for error message\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className=\"error\">{errorMessages.message}</div>\n  );\n\n  // JSX code for login form\nconst renderForm = (\n  <div className=\"form\">\n    <form onSubmit={handleSubmit}>\n      <div className=\"input-container\">\n        <label>Email </label>\n        <input type=\"text\" name=\"email\" required />\n        {renderErrorMessage(\"uname\")}\n      </div>\n      <div className=\"input-container\">\n        <label>Password </label>\n        <input type=\"password\" name=\"pass\" required />\n        {renderErrorMessage(\"pass\")}\n      </div>\n      <div className=\"button-container\">\n        <input type=\"submit\" />\n      </div>\n    </form>\n  </div>\n);\n\n// User Login info\nconst database = [\n  {\n    username: \"user1\",\n    password: \"pass1\"\n  },\n  {\n    username: \"user2\",\n    password: \"pass2\"\n  }\n];\n\nconst errors = {\n  uname: \"invalid username\",\n  pass: \"invalid password\"\n};\n\nconst handleSubmit = (event) => {\n  //Prevent page reload\n  event.preventDefault();\n\n  var { uname, pass } = document.forms[0];\n\n  // Find user login info\n  const userData = database.find((user) => user.username === uname.value);\n\n  // Compare user info\n  if (userData) {\n    if (userData.password !== pass.value) {\n      // Invalid password\n      setErrorMessages({ name: \"pass\", message: errors.pass });\n    } else {\n      setIsSubmitted(true);\n    }\n  } else {\n    // Username not found\n    setErrorMessages({ name: \"uname\", message: errors.uname });\n  }\n};\n\n<div className=\"login-form\">\n  <div className=\"title\">Sign In</div>\n  {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\n</div>\n}\n\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}